 CREATE OR REPLACE TRIGGER helpdesk_user.prevent_weekday_holiday_dml
  2  BEFORE INSERT OR UPDATE OR DELETE ON helpdesk_user.tickets
  3  FOR EACH ROW
  4  DECLARE
  5      v_today       DATE := TRUNC(SYSDATE);
  6      v_day_name    VARCHAR2(10);
  7      v_holiday_cnt NUMBER;
  8  BEGIN
  9      -- Get the day of the week
 10      SELECT TO_CHAR(v_today, 'DY', 'NLS_DATE_LANGUAGE=ENGLISH') INTO v_day_name FROM dual;
 11
 12      -- Check if it's a weekday
 13      IF v_day_name IN ('MON', 'TUE', 'WED', 'THU', 'FRI') THEN
 14          RAISE_APPLICATION_ERROR(-20001, 'DML operations are not allowed on weekdays.');
 15      END IF;
 16
 17      -- Check if today is a holiday
 18      SELECT COUNT(*) INTO v_holiday_cnt
 19      FROM helpdesk_user.holidays
 20      WHERE holiday_date = v_today;
 21
 22      IF v_holiday_cnt > 0 THEN
 23          RAISE_APPLICATION_ERROR(-20002, 'DML operations are not allowed on holidays.');
 24      END IF;
 25  END;
 26  /

SQL> CREATE OR REPLACE TRIGGER helpdesk_user.audit_ticket_changes
  2  AFTER INSERT OR UPDATE OR DELETE ON helpdesk_user.tickets
  3  FOR EACH ROW
  4  DECLARE
  5      v_action VARCHAR2(10);
  6  BEGIN
  7      IF INSERTING THEN
  8          v_action := 'INSERT';
  9      ELSIF UPDATING THEN
 10          v_action := 'UPDATE';
 11      ELSIF DELETING THEN
 12          v_action := 'DELETE';
 13      END IF;
 14
 15      INSERT INTO helpdesk_user.audit_log (username, action, table_name)
 16      VALUES (USER, v_action, 'TICKETS');
 17  END;
 18  /

SQL> CREATE OR REPLACE TRIGGER helpdesk_user.prevent_dml_weekday_holiday
  2  BEFORE INSERT OR UPDATE OR DELETE ON helpdesk_user.tickets
  3  FOR EACH ROW
  4  DECLARE
  5      v_day        VARCHAR2(10);
  6      v_today      DATE := TRUNC(SYSDATE);
  7      v_count      NUMBER;
  8  BEGIN
  9      -- Get day name (MON, TUE, ...)
 10      SELECT TO_CHAR(v_today, 'DY', 'NLS_DATE_LANGUAGE=ENGLISH') INTO v_day FROM dual;
 11
 12      -- Block weekdays (Monday to Friday)
 13      IF v_day IN ('MON', 'TUE', 'WED', 'THU', 'FRI') THEN
 14          RAISE_APPLICATION_ERROR(-20001, 'Weekday DML not allowed.');
 15      END IF;
 16
 17      -- Block public holidays for the upcoming month
 18      SELECT COUNT(*) INTO v_count
 19      FROM helpdesk_user.holidays
 20      WHERE holiday_date = v_today
 21        AND EXTRACT(MONTH FROM holiday_date) = EXTRACT(MONTH FROM ADD_MONTHS(SYSDATE, 0));
 22
 23      IF v_count > 0 THEN
 24          RAISE_APPLICATION_ERROR(-20002, 'DML blocked on holidays.');
 25      END IF;
 26  END;
 27  /
